dplyr::mutate(COTSA = (COTSA/100)*0.15) %>% # need to allow for detection
dplyr::summarise(Mean.COTS = mean(COTSA)) %>%
dplyr::mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
dplyr::group_by(REEF_NAME) %>%
dplyr::summarise(Crash = ifelse(sum(is.outbreak)==OutbreakCrash,1,0)) %>%
dplyr::filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
if (season=="summer") {
res.cc[,2*i-1,j] = CoralCover
res.cots[,2*i-1,j] = COTSabund[,3]
}
res.cc[,2*i,j] = CoralCover
res.cots[,2*i,j] = COTSabund[,3]
} # close season loop
} # close Year loop
} # Close simulation loop
summary(COTS.rsmpl[,1,1])
summary(COTS.rsmpl[,2,1])
summary(sorms.rsmpl[,2,1])
summary(storms.rsmpl[,2,1])
summary(data.COTS$COTS_1996)
LHS <- lhs::randomLHS(nsimul,9)
B.BLEACHING <- qnorm(LHS[,1], mean=bleaching.mn.sd[1], sd=bleaching.mn.sd[2])
B.COTS <- qnorm(LHS[,2], mean=COTS.mn.sd[1], sd=COTS.mn.sd[2])
B.DISEASE <- qnorm(LHS[,3], mean=disease.mn.sd[1], sd=disease.mn.sd[2])
B.STORMS <- qnorm(LHS[,4], mean=storms.mn.sd[1], sd=storms.mn.sd[2])
B.UNKNOWN <- qnorm(LHS[,5], mean=unknown.mn.sd[1], sd=unknown.mn.sd[2])
# source("COTSModel_LoadObjectsForModelling.R")
# save.image(file = "RData/COTSMod_bckp.Rdata")
load("RData/COTSMod_bckp.RData")
summary(data.COTS$COTS_1996)
B.BLEACHING <- qnorm(LHS[,1], mean=bleaching.mn.sd[1], sd=bleaching.mn.sd[2])
B.COTS <- qnorm(LHS[,2], mean=COTS.mn.sd[1], sd=COTS.mn.sd[2])
B.DISEASE <- qnorm(LHS[,3], mean=disease.mn.sd[1], sd=disease.mn.sd[2])
B.STORMS <- qnorm(LHS[,4], mean=storms.mn.sd[1], sd=storms.mn.sd[2])
B.UNKNOWN <- qnorm(LHS[,5], mean=unknown.mn.sd[1], sd=unknown.mn.sd[2])
# B.WQ <- qnorm(LHS[,6], mean=WQ.mn.sd[1], sd=WQ.mn.sd[2])
A <- B0 <- HCINI <- HCMAX <- matrix(NA, ncol = nsimul, nrow = dim(data.grid)[1])
for (i in 1:nsimul) {
A[,i] <- qnorm(LHS[i,7], mean=data.grid$pred.a.mean, sd=data.grid$pred.a.sd)
B0[,i] <- qnorm(LHS[i,8], mean=data.grid$pred.b0.mean, sd=data.grid$pred.b0.sd)
HCINI[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCini.mean, sd=data.grid$pred.HCini.sd)
HCMAX[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCmax.mean, sd=data.grid$pred.HCmax.sd)
}
HCMAX[HCINI > HCMAX] <- HCINI[HCINI > HCMAX]
# res <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the coral cover values for each grid cell (rows), year (columns) and simulation (third dimension)
bleaching.rsmpl <- COTS.rsmpl <- disease.rsmpl <- storms.rsmpl <- unknown.rsmpl <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the actual (i.e. resampled) disturbance intensity values for each grid cell (rows), year (columns) and simulation (third dimension)
# Create back up files of disturbance tables
data.bleaching[is.na(data.bleaching)] <- 0
data.COTS[is.na(data.COTS)] <- 0
data.storms[is.na(data.storms)] <- 0
data.bleaching.bckp <- data.bleaching
data.COTS.bckp <- data.COTS
data.storms.bckp <- data.storms
summary(data.COTS$COTS_1996)
j=1
i=1
# Re-initialize disturbance data
data.bleaching <- data.bleaching.bckp
data.COTS <- data.COTS.bckp
data.storms <-  data.storms.bckp
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
summary(data.COTS$COTS_1996)
sample(count.cots, count.cots*.5)
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:16)][!is.na(data.ltmp.COTS[,-(1:5)])] <- data.ltmp.COTS[,-(1:5)][!is.na(data.ltmp.COTS[,-(1:5)])]
summary(data.COTS$COTS_1996)
data.COTS[,-(1:16)][!is.na(data.ltmp.COTS[,-(1:5)])]
summary(data.ltmp.COTS$X1996)
summary(data.ltmp.COTS$X1997)
test = read.table("CoralModel/LTMP_C_XYZ_updated.txt",
header = TRUE, sep = "\t")
setwd(DATA_DIRECTORY)
test = read.table("CoralModel/LTMP_C_XYZ_updated.txt",
header = TRUE, sep = "\t")
summary(data.COTS$COTS_1996)
data.COTS <- data.COTS.bckp
summary(data.COTS$COTS_1996)
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:5)])] <- data.ltmp.COTS[,-(1:5)][!is.na(data.ltmp.COTS[,-(1:5)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
summary(data.COTS$COTS_1996)
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
summary(COTS.rsmpl[,1,1])
initializeCOTSabund <- function(data.grid, COTS.rsmpl, Year, stagenames,
COTS_StableStage, npops, j){
# browser()
### set NA Values in interpolation CoTS.init to 0
data.COTS[is.na(data.COTS)] <- 0
nstages <- length(stagenames)
### Set up the COTS abundance object
COTSabund <- matrix(0,nrow=npops, ncol=nstages)
colnames(COTSabund) <- stagenames
### Set up reference for year
colname <- paste('COTS_', Year, sep="")
### Update abundances based from interpolated manta tow data
COTSabund[,'A'] <- round(COTS.rsmpl[,1,j] * 666 * (data.grid$PercentReef/100),0)   # 666 converts manta tow to 1kmx1km
COTSabund[,'J_2'] <- round(COTSabund[,'A'] * as.numeric(COTS_StableStage[2]/COTS_StableStage[3]),0)
COTSabund[,'J_1'] <- round(COTSabund[,'A'] * as.numeric(COTS_StableStage[1]/COTS_StableStage[3]),0)
return(COTSabund)
}
COTSabund = initializeCOTSabund(data.grid, COTS.rsmpl, inityear,
stagenames, COTS_StableStage, npops, j)
summary(COTSabund[,3])
j=3
COTSabund = initializeCOTSabund(data.grid, COTS.rsmpl, inityear,
stagenames, COTS_StableStage, npops, j)
summary(COTSabund[,3])
COTS.rsmpl[,1,j]
# source("COTSModel_LoadObjectsForModelling.R")
# save.image(file = "RData/COTSMod_bckp.Rdata")
load("RData/COTSMod_bckp.RData")
setwd(DIRECTORY)
# source("COTSModel_LoadObjectsForModelling.R")
# save.image(file = "RData/COTSMod_bckp.Rdata")
load("RData/COTSMod_bckp.RData")
LHS <- lhs::randomLHS(nsimul,9)
B.BLEACHING <- qnorm(LHS[,1], mean=bleaching.mn.sd[1], sd=bleaching.mn.sd[2])
B.COTS <- qnorm(LHS[,2], mean=COTS.mn.sd[1], sd=COTS.mn.sd[2])
B.DISEASE <- qnorm(LHS[,3], mean=disease.mn.sd[1], sd=disease.mn.sd[2])
B.STORMS <- qnorm(LHS[,4], mean=storms.mn.sd[1], sd=storms.mn.sd[2])
B.UNKNOWN <- qnorm(LHS[,5], mean=unknown.mn.sd[1], sd=unknown.mn.sd[2])
# B.WQ <- qnorm(LHS[,6], mean=WQ.mn.sd[1], sd=WQ.mn.sd[2])
A <- B0 <- HCINI <- HCMAX <- matrix(NA, ncol = nsimul, nrow = dim(data.grid)[1])
for (i in 1:nsimul) {
A[,i] <- qnorm(LHS[i,7], mean=data.grid$pred.a.mean, sd=data.grid$pred.a.sd)
B0[,i] <- qnorm(LHS[i,8], mean=data.grid$pred.b0.mean, sd=data.grid$pred.b0.sd)
HCINI[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCini.mean, sd=data.grid$pred.HCini.sd)
HCMAX[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCmax.mean, sd=data.grid$pred.HCmax.sd)
}
HCMAX[HCINI > HCMAX] <- HCINI[HCINI > HCMAX]
# res <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the coral cover values for each grid cell (rows), year (columns) and simulation (third dimension)
bleaching.rsmpl <- COTS.rsmpl <- disease.rsmpl <- storms.rsmpl <- unknown.rsmpl <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the actual (i.e. resampled) disturbance intensity values for each grid cell (rows), year (columns) and simulation (third dimension)
# Create back up files of disturbance tables
data.bleaching[is.na(data.bleaching)] <- 0
data.COTS[is.na(data.COTS)] <- 0
data.storms[is.na(data.storms)] <- 0
data.bleaching.bckp <- data.bleaching
data.COTS.bckp <- data.COTS
data.storms.bckp <- data.storms
# Resample Distrubances for each simulation
for (j in 1:nsimul) {
# Re-initialize disturbance data
data.bleaching <- data.bleaching.bckp
data.COTS <- data.COTS.bckp
data.storms <-  data.storms.bckp
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:5)])] <- data.ltmp.COTS[,-(1:5)][!is.na(data.ltmp.COTS[,-(1:5)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
bleaching.mn <- apply(bleaching.rsmpl, c(1,2), mean, na.rm=T)
COTS.mn <- apply(COTS.rsmpl, c(1,2), mean, na.rm=T)
disease.mn <- apply(disease.rsmpl, c(1,2), mean, na.rm=T)
storms.mn <- apply(storms.rsmpl, c(1,2), mean, na.rm=T)
unknown.mn <- apply(unknown.rsmpl, c(1,2), mean, na.rm=T)
}
nsimul =10
LHS <- lhs::randomLHS(nsimul,9)
B.BLEACHING <- qnorm(LHS[,1], mean=bleaching.mn.sd[1], sd=bleaching.mn.sd[2])
B.COTS <- qnorm(LHS[,2], mean=COTS.mn.sd[1], sd=COTS.mn.sd[2])
B.DISEASE <- qnorm(LHS[,3], mean=disease.mn.sd[1], sd=disease.mn.sd[2])
B.STORMS <- qnorm(LHS[,4], mean=storms.mn.sd[1], sd=storms.mn.sd[2])
B.UNKNOWN <- qnorm(LHS[,5], mean=unknown.mn.sd[1], sd=unknown.mn.sd[2])
# B.WQ <- qnorm(LHS[,6], mean=WQ.mn.sd[1], sd=WQ.mn.sd[2])
A <- B0 <- HCINI <- HCMAX <- matrix(NA, ncol = nsimul, nrow = dim(data.grid)[1])
for (i in 1:nsimul) {
A[,i] <- qnorm(LHS[i,7], mean=data.grid$pred.a.mean, sd=data.grid$pred.a.sd)
B0[,i] <- qnorm(LHS[i,8], mean=data.grid$pred.b0.mean, sd=data.grid$pred.b0.sd)
HCINI[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCini.mean, sd=data.grid$pred.HCini.sd)
HCMAX[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCmax.mean, sd=data.grid$pred.HCmax.sd)
}
HCMAX[HCINI > HCMAX] <- HCINI[HCINI > HCMAX]
# res <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the coral cover values for each grid cell (rows), year (columns) and simulation (third dimension)
bleaching.rsmpl <- COTS.rsmpl <- disease.rsmpl <- storms.rsmpl <- unknown.rsmpl <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the actual (i.e. resampled) disturbance intensity values for each grid cell (rows), year (columns) and simulation (third dimension)
# Create back up files of disturbance tables
data.bleaching[is.na(data.bleaching)] <- 0
data.COTS[is.na(data.COTS)] <- 0
data.storms[is.na(data.storms)] <- 0
data.bleaching.bckp <- data.bleaching
data.COTS.bckp <- data.COTS
data.storms.bckp <- data.storms
# Resample Distrubances for each simulation
for (j in 1:nsimul) {
# Re-initialize disturbance data
data.bleaching <- data.bleaching.bckp
data.COTS <- data.COTS.bckp
data.storms <-  data.storms.bckp
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:5)])] <- data.ltmp.COTS[,-(1:5)][!is.na(data.ltmp.COTS[,-(1:5)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
bleaching.mn <- apply(bleaching.rsmpl, c(1,2), mean, na.rm=T)
COTS.mn <- apply(COTS.rsmpl, c(1,2), mean, na.rm=T)
disease.mn <- apply(disease.rsmpl, c(1,2), mean, na.rm=T)
storms.mn <- apply(storms.rsmpl, c(1,2), mean, na.rm=T)
unknown.mn <- apply(unknown.rsmpl, c(1,2), mean, na.rm=T)
}
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:6)])] <- data.ltmp.COTS[,-(1:6)][!is.na(data.ltmp.COTS[,-(1:6)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
# Resample Distrubances for each simulation
for (j in 1:nsimul) {
# Re-initialize disturbance data
data.bleaching <- data.bleaching.bckp
data.COTS <- data.COTS.bckp
data.storms <-  data.storms.bckp
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:6)])] <- data.ltmp.COTS[,-(1:6)][!is.na(data.ltmp.COTS[,-(1:6)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
bleaching.mn <- apply(bleaching.rsmpl, c(1,2), mean, na.rm=T)
COTS.mn <- apply(COTS.rsmpl, c(1,2), mean, na.rm=T)
disease.mn <- apply(disease.rsmpl, c(1,2), mean, na.rm=T)
storms.mn <- apply(storms.rsmpl, c(1,2), mean, na.rm=T)
unknown.mn <- apply(unknown.rsmpl, c(1,2), mean, na.rm=T)
}
# source("COTSModel_LoadObjectsForModelling.R")
# save.image(file = "RData/COTSMod_bckp.Rdata")
load("RData/COTSMod_bckp.RData")
set.seed(123)
NREPS <- 10 # How many rows from master DF
Years <- 1996:2017
nyears <- length(Years)
NSEASONS <- 2
seasons <- c("summer","winter")
npops <- 15802 #number of reefs we want to test
nsimul <- 10
VERBOSE <- TRUE        # flag whether functions should return detailed information
DEBUG <- TRUE          # flag whether to output debug files etc.
projection <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
stagenames <- c('J_1', 'J_2', 'A')
COTSmort <- c(0.8,0.7,0.2)
names(COTSmort) <- stagenames
COTSremain <- c(0.02,0.2,1)
names(COTSremain) <- stagenames
COTS_StableStage <- c(0.9803, 0.0171, 0.0026)
# Resample Disturbance ----
LHS <- lhs::randomLHS(nsimul,9)
B.BLEACHING <- qnorm(LHS[,1], mean=bleaching.mn.sd[1], sd=bleaching.mn.sd[2])
B.COTS <- qnorm(LHS[,2], mean=COTS.mn.sd[1], sd=COTS.mn.sd[2])
B.DISEASE <- qnorm(LHS[,3], mean=disease.mn.sd[1], sd=disease.mn.sd[2])
B.STORMS <- qnorm(LHS[,4], mean=storms.mn.sd[1], sd=storms.mn.sd[2])
B.UNKNOWN <- qnorm(LHS[,5], mean=unknown.mn.sd[1], sd=unknown.mn.sd[2])
# B.WQ <- qnorm(LHS[,6], mean=WQ.mn.sd[1], sd=WQ.mn.sd[2])
A <- B0 <- HCINI <- HCMAX <- matrix(NA, ncol = nsimul, nrow = dim(data.grid)[1])
for (i in 1:nsimul) {
A[,i] <- qnorm(LHS[i,7], mean=data.grid$pred.a.mean, sd=data.grid$pred.a.sd)
B0[,i] <- qnorm(LHS[i,8], mean=data.grid$pred.b0.mean, sd=data.grid$pred.b0.sd)
HCINI[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCini.mean, sd=data.grid$pred.HCini.sd)
HCMAX[,i] <- qnorm(LHS[i,9], mean=data.grid$pred.HCmax.mean, sd=data.grid$pred.HCmax.sd)
}
HCMAX[HCINI > HCMAX] <- HCINI[HCINI > HCMAX]
# res <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the coral cover values for each grid cell (rows), year (columns) and simulation (third dimension)
bleaching.rsmpl <- COTS.rsmpl <- disease.rsmpl <- storms.rsmpl <- unknown.rsmpl <- array(NA, dim=c(dim(data.grid)[1], nyears, nsimul)) ## Stores the actual (i.e. resampled) disturbance intensity values for each grid cell (rows), year (columns) and simulation (third dimension)
# Create back up files of disturbance tables
data.bleaching[is.na(data.bleaching)] <- 0
data.COTS[is.na(data.COTS)] <- 0
data.storms[is.na(data.storms)] <- 0
data.bleaching.bckp <- data.bleaching
data.COTS.bckp <- data.COTS
data.storms.bckp <- data.storms
# Resample Distrubances for each simulation
for (j in 1:nsimul) {
# Re-initialize disturbance data
data.bleaching <- data.bleaching.bckp
data.COTS <- data.COTS.bckp
data.storms <-  data.storms.bckp
# Resample disturbance data in each year
data.unknown <- data.disease <- data.COTS
colnames(data.unknown)[6:38] = paste0("UNKN_", 1985:2017)
colnames(data.disease)[6:38] = paste0("DIS_", 1985:2017)
data.unknown[,6:38] <- data.disease[,6:38] <- 0
for (i in 1:nyears) {
## Simulate disease and unknown disturbance based on observed frequencies
data.unknown[,i+16] <- sampling::srswor(round(length(data.unknown[,i+16])*0.01),length(data.unknown[,i+16]))
data.disease[,i+16] <- sampling::srswor(round(length(data.disease[,i+16])*0.01),length(data.disease[,i+16]))
## Resample other disturbance based on P(Impact|Disturbance)
count.cots <- length(data.COTS[,i+16][data.COTS[,i+16]>0])
count.storms <- length(data.storms[,i+16][data.storms[,i+16]>0])
count.bleaching <- length(data.bleaching[,i+16][data.bleaching[,i+16]>0])
if (count.cots>0)  data.COTS[,i+16][data.COTS[,i+16]>0][sample(count.cots, count.cots*.5)] <- 0
if (count.storms>0)  data.storms[,i+16][data.storms[,i+16]>0][sample(count.storms, round(count.storms*.5))] <- 0
if (count.bleaching>0)  data.bleaching[,i+16][data.bleaching[,i+16]>0][sample(count.bleaching, count.bleaching*.1)] <- 0
}
data.disease[,-(1:5)][data.disease[,-(1:5)]>1] <- 1
data.unknown[,-(1:5)][data.unknown[,-(1:5)]>1] <- 1
data.storms[,"Hs4MW_2009"] <- data.storms[,"Hs4MW_2009"]*.5
data.storms[,"Hs4MW_2013"] <- data.storms[,"Hs4MW_2013"]*.5
data.storms[,"Hs4MW_2014"] <- data.storms[,"Hs4MW_2014"]*.5
data.storms[,"Hs4MW_2015"] <- data.storms[,"Hs4MW_2015"]*.5
# Add known disturbance for LTMP reefs
data.bleaching[,-(1:16)][!is.na(data.ltmp.bleaching[,-(1:5)])] <- data.ltmp.bleaching[,-(1:5)][!is.na(data.ltmp.bleaching[,-(1:5)])]
data.COTS[,-(1:17)][!is.na(data.ltmp.COTS[,-(1:6)])] <- data.ltmp.COTS[,-(1:6)][!is.na(data.ltmp.COTS[,-(1:6)])]
data.storms[,-(1:16)][!is.na(data.ltmp.storms[,-(1:5)])] <- data.ltmp.storms[,-(1:5)][!is.na(data.ltmp.storms[,-(1:5)])]
data.disease[,-(1:16)][!is.na(data.ltmp.disease[,-(1:5)])] <- data.ltmp.disease[,-(1:5)][!is.na(data.ltmp.disease[,-(1:5)])]
data.unknown[,-(1:16)][!is.na(data.ltmp.unknown[,-(1:5)])] <- data.ltmp.unknown[,-(1:5)][!is.na(data.ltmp.unknown[,-(1:5)])]
# store the resampled distrubances for the replicate j
bleaching.rsmpl[,,j] <- as.matrix(data.bleaching[,-(1:16)])
COTS.rsmpl[,,j] <- as.matrix(data.COTS[,-(1:16)])
disease.rsmpl[,,j] <- as.matrix(data.disease[,-(1:16)])
storms.rsmpl[,,j] <- as.matrix(data.storms[,-(1:16)])
unknown.rsmpl[,,j] <- as.matrix(data.unknown[,-(1:16)])
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
bleaching.mn <- apply(bleaching.rsmpl, c(1,2), mean, na.rm=T)
COTS.mn <- apply(COTS.rsmpl, c(1,2), mean, na.rm=T)
disease.mn <- apply(disease.rsmpl, c(1,2), mean, na.rm=T)
storms.mn <- apply(storms.rsmpl, c(1,2), mean, na.rm=T)
unknown.mn <- apply(unknown.rsmpl, c(1,2), mean, na.rm=T)
}
load("C:/Users/jc312264/OneDrive - James Cook University/COTS_Model/Results/Sample_3.Rdata")
summary(res.cots[,6,1])
# Write Parameter Data Frame And Results Containers ----
masterDF = data.frame("SexRatio" = 5,
"ConsRateW" = 150,
"ConsRateS" = 250,
"avgPCF" = 20000000,
"sdPCF" = 10000000,
"mortJ1" =  0.99,
"mortJ2" = 0.95,
"mortA" = 0.9,
"remJ1" = 0,
"remJ2" = 0,
"remA" = 1,
"cssJ1" = 0.9803,
"cssJ2" = 0.0171,
"cssA" = 0.0026,
"Pred" = 0.99,
"p" = 0.2,
"Crash" = 0,
"OutbreakCrash" = Inf,
"Fbase" = seq(0.05, 0.25, 0.05),
"CCRatioThresh" = 25)
source('C:/Users/jc312264/OneDrive - James Cook University/COTS_Model/COTSModel_COTSFunctions.R', echo=TRUE)
initializeCOTSabund
