CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
ConsRate = masterDF[rep, "ConsRateW":"ConsRateS"]
ConsRate = masterDF[rep, 2:3]
rep=5
ConsRate = masterDF[rep, 2:3]
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
runModel = function(masterDF, PopData, COTS.data, Years = Years, data.grid, rep, Pred, p, Crash) {
# browser()
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = masterDF[rep, 2:3]
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
# avgAdultSize =
# sdAdultSize = # These will change the fecundity estimatesC
# need an Allee Effect
# need to make stable stage vary by a scaling factor
# make mortality and remain resource driven
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
COTS.data = COTS.data[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
CoralCover=data.grid$pred.HCini.mean[1:npops]
B0=data.grid$pred.b0.mean[1:npops]
HC.asym=data.grid$pred.HCmax.mean[1:npops]
WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
#PCFParams = COTSPCF(npops, SexRatio = 5)
# K = setCarryingCapacity(npops)
# print(length(K$MinK.10A))
COTSabund = initializeCOTSabund(PopData, COTS.data, 1996, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
# Results = initializeModel(PopData, data.grid, COTSabund, CoralCover=CoralCover, SexRatio,
#                           ConsRateS, ConsRateW, B0, WQ, HC.asym, PCFParams, npops, ConnMat, FvDParams)
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(1996:2015,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, DistCOTS=NA, DistCYCL=NA, DistBLCH=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
# browser()
# year Loop
for(year in Years){
print(year)# loop through years
for(season in seasons){             # loop through seasons
# browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p=p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, data.grid, season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
Growth = doCoralGrowth(CoralCover, B0, WQ, HC.asym)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
#CoralCover = doCoralDisturbance(season,CoralCover,...)           # coral disturbance processes, including from COTS
# browser()
Results[(Results$Year==year) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover,CoralConsum, CoralGrowth)
}
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",rep)
save(Results, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
# browser()
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = masterDF[rep, 2:3]
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
COTS.data = COTS.data[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
CoralCover=data.grid$pred.HCini.mean[1:npops]
B0=data.grid$pred.b0.mean[1:npops]
HC.asym=data.grid$pred.HCmax.mean[1:npops]
WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
#PCFParams = COTSPCF(npops, SexRatio = 5)
# K = setCarryingCapacity(npops)
# print(length(K$MinK.10A))
COTSabund = initializeCOTSabund(PopData, COTS.data, 1996, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
# Results = initializeModel(PopData, data.grid, COTSabund, CoralCover=CoralCover, SexRatio,
#                           ConsRateS, ConsRateW, B0, WQ, HC.asym, PCFParams, npops, ConnMat, FvDParams)
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(1996:2015,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, DistCOTS=NA, DistCYCL=NA, DistBLCH=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
# browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p=p, Crash)
p=0.25
crash=3
Crash=3
# browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
season="summer"
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
pred=0.98
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
Pred=0.98
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, data.grid, season, COTSabund, CoralCover, ConsRate)
Consumption = doCoralConsumption(year, data.grid, season, COTSabund, CoralCover)
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
Consumption = doCoralConsumption(year, data.grid, season, COTSabund, CoralCover, ConsRate)
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
runModel = function(masterDF, PopData, COTS.data, Years = Years, data.grid, rep, Pred, p, Crash) {
# browser()
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = masterDF[rep, 2:3]
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
# avgAdultSize =
# sdAdultSize = # These will change the fecundity estimatesC
# need an Allee Effect
# need to make stable stage vary by a scaling factor
# make mortality and remain resource driven
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
COTS.data = COTS.data[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
CoralCover=data.grid$pred.HCini.mean[1:npops]
B0=data.grid$pred.b0.mean[1:npops]
HC.asym=data.grid$pred.HCmax.mean[1:npops]
WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
#PCFParams = COTSPCF(npops, SexRatio = 5)
# K = setCarryingCapacity(npops)
# print(length(K$MinK.10A))
COTSabund = initializeCOTSabund(PopData, COTS.data, 1996, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
# Results = initializeModel(PopData, data.grid, COTSabund, CoralCover=CoralCover, SexRatio,
#                           ConsRateS, ConsRateW, B0, WQ, HC.asym, PCFParams, npops, ConnMat, FvDParams)
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(1996:2015,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, DistCOTS=NA, DistCYCL=NA, DistBLCH=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
# browser()
# year Loop
for(year in Years){
print(year)# loop through years
for(season in seasons){             # loop through seasons
# browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
Growth = doCoralGrowth(CoralCover, B0, WQ, HC.asym)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
#CoralCover = doCoralDisturbance(season,CoralCover,...)           # coral disturbance processes, including from COTS
# browser()
Results[(Results$Year==year) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover,CoralConsum, CoralGrowth)
}
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",rep)
save(Results, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
# browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
# browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
runModel = function(masterDF, PopData, COTS.data, Years = Years, data.grid, rep, Pred, p, Crash) {
# browser()
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = masterDF[rep, 2:3]
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
# avgAdultSize =
# sdAdultSize = # These will change the fecundity estimatesC
# need an Allee Effect
# need to make stable stage vary by a scaling factor
# make mortality and remain resource driven
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
COTS.data = COTS.data[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
CoralCover=data.grid$pred.HCini.mean[1:npops]
B0=data.grid$pred.b0.mean[1:npops]
HC.asym=data.grid$pred.HCmax.mean[1:npops]
WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
#PCFParams = COTSPCF(npops, SexRatio = 5)
# K = setCarryingCapacity(npops)
# print(length(K$MinK.10A))
COTSabund = initializeCOTSabund(PopData, COTS.data, 1996, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
# Results = initializeModel(PopData, data.grid, COTSabund, CoralCover=CoralCover, SexRatio,
#                           ConsRateS, ConsRateW, B0, WQ, HC.asym, PCFParams, npops, ConnMat, FvDParams)
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(1996:2015,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, DistCOTS=NA, DistCYCL=NA, DistBLCH=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
# browser()
# year Loop
for(year in Years){
print(year)# loop through years
for(season in seasons){             # loop through seasons
browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
Growth = doCoralGrowth(CoralCover, B0, WQ, HC.asym)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
#CoralCover = doCoralDisturbance(season,CoralCover,...)           # coral disturbance processes, including from COTS
# browser()
Results[(Results$Year==year) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover,CoralConsum, CoralGrowth)
}
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",rep)
save(Results, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[1]*COTSabund[,"A"]*182
ConsRate[1]
runModel = function(masterDF, PopData, COTS.data, Years = Years, data.grid, rep, Pred, p, Crash) {
# browser()
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = masterDF[rep, 2:3]
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
# avgAdultSize =
# sdAdultSize = # These will change the fecundity estimatesC
# need an Allee Effect
# need to make stable stage vary by a scaling factor
# make mortality and remain resource driven
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
COTS.data = COTS.data[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
CoralCover=data.grid$pred.HCini.mean[1:npops]
B0=data.grid$pred.b0.mean[1:npops]
HC.asym=data.grid$pred.HCmax.mean[1:npops]
WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
#PCFParams = COTSPCF(npops, SexRatio = 5)
# K = setCarryingCapacity(npops)
# print(length(K$MinK.10A))
COTSabund = initializeCOTSabund(PopData, COTS.data, 1996, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
# Results = initializeModel(PopData, data.grid, COTSabund, CoralCover=CoralCover, SexRatio,
#                           ConsRateS, ConsRateW, B0, WQ, HC.asym, PCFParams, npops, ConnMat, FvDParams)
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(1996:2015,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, DistCOTS=NA, DistCYCL=NA, DistBLCH=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
# browser()
# year Loop
for(year in Years){
print(year)# loop through years
for(season in seasons){             # loop through seasons
# browser()
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams)
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(year, season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
Growth = doCoralGrowth(CoralCover, B0, WQ, HC.asym)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
#CoralCover = doCoralDisturbance(season,CoralCover,...)           # coral disturbance processes, including from COTS
# browser()
Results[(Results$Year==year) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover,CoralConsum, CoralGrowth)
}
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",rep)
save(Results, file=name)
}
ConsRate = as.vector(masterDF[rep, 2:3])
View(ConsRate)
CConsumed = ConsRate[,1]*COTSabund[,"A"]*182
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[,1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[,2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
doCoralConsumption = function(year, season, COTSabund, CoralCover, ConsRate) {
if (season =="summer") {
# browser()
#CoralCover= Results[(Results$Year==year-1) & (Results$Season=="winter"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[,1]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
if (season =="winter") {
#CoralCover= Results[(Results$Year==year) & (Results$Season=="summer"),"CoralCover"]
CAvailable = (CoralCover*data.grid$PercentReef/10000)*1e6*1e4 # in cm2
CConsumed = ConsRate[,2]*COTSabund[,"A"]*182
CRemaining=((CAvailable-CConsumed)/1e10)*(10000/data.grid$PercentReef)
CChange = CRemaining-CoralCover
CRemaining[CRemaining < 0.5] <- 0.5
}
return(cbind(CRemaining, CChange))
}
runModel(masterDF=masterDF, Years = 1996:2015, PopData=PopData[1:npops,],COTS.data = COTS.data[1:npops,],
data.grid = data.grid[1:npops,], rep=i, Pred=0.98, p=0.25, Crash = 3)
setwd(RESULTS_DIRECTORY)
load(sprintf("Sample_%s.Rdata",10))
library(ggplot2)
library(dplyr)
plotresults = Results %>%
# filter(REEF_NAME %in% reefs[1:600]) %>%
group_by(REEF_NAME,Year, Season) %>%
mutate(COTSA = (COTSA/100)*0.15) %>%
summarise(COTSm = mean(COTSA, na.rm=T),
COTSsd = sd(COTSA, na.rm = T),
Coralm = mean(CoralCover, na.rm=T),
Coralsd = sd(CoralCover, na.rm = T)) %>%
mutate(Time = paste0(Year, substr(Season, 1,1)))
ggplot(data=plotresults, aes(x=Year, y=Coralm)) + geom_smooth() + facet_wrap(~REEF_NAME)#+ geom_smooth(aes(y=COTSm))
ggplot(data=plotresults, aes(x=Year, y=COTSm)) + geom_point() + geom_line() +  facet_wrap(~REEF_NAME)
