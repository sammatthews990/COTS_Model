} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = T, inityear = 1996,)
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,"COTSA"]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,"COTSA"]
} # Close outbreak crasher
Results %>%
filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
res.cc = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
res.cots = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# Simulation loop
for (j in 1:nsimul) {
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
dplyr::filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,"COTSA"]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,"COTSA"]
} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = T, inityear = 1996,)
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
library(dplyr)
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
names(COTSabund)
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
res.cc = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
res.cots = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# Simulation loop
for (j in 1:nsimul) {
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
dplyr::filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,3]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,3]
} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, file=name)
}
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
res.cc = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
res.cots = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# Simulation loop
for (j in 1:nsimul) {
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
dplyr::filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,3]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,3]
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
load("C:/Users/jc312264/Dropbox/CoTS_Model/Results/Results_10.Rdata")
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
res.cc = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
res.cots = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# Simulation loop
for (j in 1:nsimul) {
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
# Results[(Results$Year==i+1995) & (Results$Season==season),
#         c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
#   cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
dplyr::filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,3]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,3]
} # close season loop
} # close Year loop
# setwd(RESULTS_DIRECTORY)
# name <- sprintf("Sample_%s.Rdata",j)
# save(Results, file=name)
# print(j)
}
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
load("eReefsPredictions.Rdata")
getwd()
setwd(DATA_DIRECTORY)
load("eReefsPredictions.Rdata")
dat.predict.med.Chl = dat.predict.med.Chl %>% inner_join(data.grid[,1:3], by = c("lat", "lon"))
library(dplyr)
dat.predict.med.Chl = dat.predict.med.Chl %>% inner_join(data.grid[,1:3], by = c("lat", "lon"))
View(dat.predict.med.Chl)
load("eReefsPredictions.Rdata")
dat.predict.med.Chl = dat.predict.med.Chl %>% inner_join(data.grid[,1:3], by = c("PIXEL_ID","lat", "lon"))
dat.predict.med.Salt = dat.predict.med.Salt %>% inner_join(data.grid[,1:3], by = c("PIXEL_ID","lat", "lon"))
dat.predict.med.Temp = dat.predict.med.Temp %>% inner_join(data.grid[,1:3], by = c("PIXEL_ID","lat", "lon"))
dat.predict.sd = dat.predict.sd %>% inner_join(data.grid[,1:3], by = c("PIXEL_ID","lat", "lon"))
rowSums(COTS.ConnMat)
summary(rowMeans(COTS.ConnMat))
max(rowMeans(COTS.ConnMat))
max(rowSums(COTS.ConnMat))
summary(rowSums(COTS.ConnMat))
