##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# browser()
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
filter(Year > (i+1995-4) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==4,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
for (j in 1:10){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996)
}
NREPS = 10
DataHarvest.TEST = HarvestData(RESULTS_DIRECTORY)
CC.TEST = as.data.frame(DataHarvest.TEST[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1 = mean(CoralCover),
Serr.CC1 = sd(CoralCover)/sqrt(n()))
load("C:/Users/jc312264/Dropbox/CoTS_Model/Results/Sample_1.Rdata")
View(Results)
NREPS = 10
DataHarvest.TEST = HarvestData(RESULTS_DIRECTORY)
CoralMat = matrix(NA, nrow = (npops*NYEARS*NSEASONS), ncol = NREPS+3)
COTSMat = matrix(NA, nrow = (npops*NYEARS*NSEASONS), ncol = NREPS+3)
load("Sample_1.Rdata")
setwd(RESULTS_DIRECTORY)
load("Sample_1.Rdata")
setwd(RESULTS_DIRECTORY)
load("Sample_1.Rdata")
CoralMat[,1]=COTSMat[,1] = Results[, "PIXEL_ID"]
CoralMat = matrix(NA, nrow = (npops*NYEARS*NSEASONS), ncol = NREPS+3)
NYEARS
# NREPS <- 10
NYEARS <- 22
DataHarvest.TEST = HarvestData(RESULTS_DIRECTORY)
CC.TEST = as.data.frame(DataHarvest.TEST[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1 = mean(CoralCover),
Serr.CC1 = sd(CoralCover)/sqrt(n()))
CC.TEST = as.data.frame(DataHarvest.TEST[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:13) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1 = mean(CoralCover),
Serr.CC1 = sd(CoralCover)/sqrt(n()))
CC.TEST = as.data.frame(DataHarvest.TEST[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:13) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1 = mean(CoralCover),
Serr.CC1 = sd(CoralCover)/sqrt(n()))
COTS.TEST = as.data.frame(DataHarvest.TEST[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS = mean(COTS),
Serr.COTS = sd(COTS)/sqrt(n()))
#          data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
#          nsimul = 10, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996)
# }
# NREPS = 10
# DataHarvest.TEST = HarvestData(RESULTS_DIRECTORY)
# CC.TEST = as.data.frame(DataHarvest.TEST[[2]]) %>%
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:13) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1 = mean(CoralCover),
#             Serr.CC1 = sd(CoralCover)/sqrt(n()))
COTS.TEST = as.data.frame(DataHarvest.TEST[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:13) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS = mean(COTS),
Serr.COTS = sd(COTS)/sqrt(n()))
View(COTS.TEST)
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:13) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1 = mean(CoralCover),
#             Serr.CC1 = sd(CoralCover)/sqrt(n()))
# COTS.TEST = as.data.frame(DataHarvest.TEST[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:13) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS = mean(COTS),
#             Serr.COTS = sd(COTS)/sqrt(n()))
ForDashboard.TEST = dplyr::left_join(COTS.TEST, data.grid[,1:7], by="PIXEL_ID") #%>% dplyr::select(1,14:19,2:14)
View(ForDashboard.TEST)
NREPS = 100
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996)
}
DataHarvest.NoCOTS = HarvestData(RESULTS_DIRECTORY)
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996)
}
DataHarvest.wCOTS = HarvestData(RESULTS_DIRECTORY)
nsimul = 100
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1994)
}
DataHarvest.wCOTS94 = HarvestData(RESULTS_DIRECTORY)
CC.NoCOTS = as.data.frame(DataHarvest.NoCOTS[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC = mean(CoralCover),
Serr.CC = sd(CoralCover)/sqrt(n()))
View(CC.NoCOTS)
CC.wCOTS = as.data.frame(DataHarvest.wCOTS[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1 = mean(CoralCover),
Serr.CC1 = sd(CoralCover)/sqrt(n()))
COTS.wCOTS = as.data.frame(DataHarvest.wCOTS[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS = mean(COTS),
Serr.COTS = sd(COTS)/sqrt(n()))
CC.wCOTS94 = as.data.frame(DataHarvest.wCOTS94[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC94 = mean(CoralCover),
Serr.CC94 = sd(CoralCover)/sqrt(n()))
COTS.wCOTS94 = as.data.frame(DataHarvest.wCOTS94[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS94 = mean(COTS),
Serr.COTS94 = sd(COTS)/sqrt(n()))
ForDashboard = bind_cols(CC.NoCOTS, CC.wCOTS[,4:5], COTS.wCOTS[,4:5], CC.wCOTS94[,4:5], COTS.wCOTS94[,4:5])
ForDashboard = dplyr::left_join(ForDashboard, data.grid[,1:7], by="PIXEL_ID") %>% dplyr::select(1,14:19,2:14)
setwd(RESULTS_DIRECTORY)
write.csv(ForDashboard, "ResultsDashboard/Dashboard_Sum.csv", row.names = F)
View(ForDashboard)
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul, j,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# browser()
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
filter(Year > (i+1995-6) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996)
}
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul, j,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# browser()
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover, COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
Results[(Results$Year==i+1995) & (Results$Season==season),
c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
} # close season loop
} # close Year loop
setwd(RESULTS_DIRECTORY)
name <- sprintf("Sample_%s.Rdata",j)
save(Results, file=name)
print(j)
}
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996, OutbreakCrash = 5)
}
DataHarvest.wCOTS5YearCrash = HarvestData(RESULTS_DIRECTORY)
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996, OutbreakCrash = 6)
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996, OutbreakCrash = 6)
}
DataHarvest.wCOTS6YearCrash = HarvestData(RESULTS_DIRECTORY)
DataHarvest.wCOTS6YearCrash = HarvestData(RESULTS_DIRECTORY)
CC.wCOTS = as.data.frame(DataHarvest.wCOTS[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.4Y = mean(CoralCover),
Serr.CC1.4Y = sd(CoralCover)/sqrt(n()))
setwd(RESULTS_DIRECTORY)
Dashboard_Sum = read.csv("ResultsDashboard/Dashboard_Sum.csv", row.names = F, header = T)
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC94 = mean(CoralCover),
#             Serr.CC94 = sd(CoralCover)/sqrt(n()))
# COTS.wCOTS94 = as.data.frame(DataHarvest.wCOTS94[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS94 = mean(COTS),
#             Serr.COTS94 = sd(COTS)/sqrt(n()))
rm(DataHarvest.TEST)
rm(DataHarvest.wCOTS94)
rm(DataHarvest.NoCOTS)
setwd(RESULTS_DIRECTORY)
Dashboard_Sum = read.csv("ResultsDashboard/Dashboard_Sum.csv", row.names = F, header = T)
CC.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.5Y = mean(CoralCover),
Serr.CC1.5Y = sd(CoralCover)/sqrt(n()))
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1.4Y = mean(CoralCover),
#             Serr.CC1.4Y = sd(CoralCover)/sqrt(n()))
# COTS.wCOTS = as.data.frame(DataHarvest.wCOTS[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS4Y = mean(COTS),
#             Serr.COTS4Y = sd(COTS)/sqrt(n()))
CC.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.5Y = mean(CoralCover),
Serr.CC1.5Y = sd(CoralCover)/sqrt(n()))
library(dplyr)
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1.4Y = mean(CoralCover),
#             Serr.CC1.4Y = sd(CoralCover)/sqrt(n()))
# COTS.wCOTS = as.data.frame(DataHarvest.wCOTS[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS4Y = mean(COTS),
#             Serr.COTS4Y = sd(COTS)/sqrt(n()))
CC.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.5Y = mean(CoralCover),
Serr.CC1.5Y = sd(CoralCover)/sqrt(n()))
COTS.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS5Y = mean(COTS),
Serr.COTS5Y = sd(COTS)/sqrt(n()))
CC.wCOTS6Y = as.data.frame(DataHarvest.wCOTS6YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.6Y = mean(CoralCover),
Serr.CC1.6Y = sd(CoralCover)/sqrt(n()))
COTS.wCOTS6Y = as.data.frame(DataHarvest.wCOTS6YearCrash[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS6Y = mean(COTS),
Serr.COTS6Y = sd(COTS)/sqrt(n()))
ForDashboard = bind_cols(CC.NoCOTS, CC.wCOTS[,4:5], COTS.wCOTS[,4:5],
CC.wCOTS5Y[,4:5], COTS.wCOTS5Y[,4:5],
CC.wCOTS6Y[,4:5], COTS.wCOTS6Y[,4:5],
CC.wCOTS94[,4:5], COTS.wCOTS94[,4:5])
ForDashboard = dplyr::left_join(ForDashboard, data.grid[,1:7], by="PIXEL_ID") #%>% dplyr::select(1,14:19,2:13)
ForDashboard = bind_cols(CC.NoCOTS, CC.wCOTS[,4:5], COTS.wCOTS[,4:5],
CC.wCOTS5Y[,4:5], COTS.wCOTS5Y[,4:5],
CC.wCOTS6Y[,4:5], COTS.wCOTS6Y[,4:5],
CC.wCOTS94[,4:5], COTS.wCOTS94[,4:5])
ForDashboard = dplyr::left_join(ForDashboard, data.grid[,1:7], by="PIXEL_ID") %>% dplyr::select(1,22:27,2:21)
setwd(RESULTS_DIRECTORY)
write.csv(ForDashboard, "ResultsDashboard/Dashboard_Sum.csv", row.names = F)
for (j in 1:nsimul){
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 100, j=j, COTSfromCoralModel = FALSE, COTSfromSimul = TRUE, browse = F, inityear = 1996, OutbreakCrash = 5)
}
DataHarvest.wCOTS5YearCrash = HarvestData(RESULTS_DIRECTORY)
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1.4Y = mean(CoralCover),
#             Serr.CC1.4Y = sd(CoralCover)/sqrt(n()))
# COTS.wCOTS = as.data.frame(DataHarvest.wCOTS[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS4Y = mean(COTS),
#             Serr.COTS4Y = sd(COTS)/sqrt(n()))
CC.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.5Y = mean(CoralCover),
Serr.CC1.5Y = sd(CoralCover)/sqrt(n()))
#   tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
#   group_by(PIXEL_ID, Year, Season) %>%
#   summarise(Avg.CC1.4Y = mean(CoralCover),
#             Serr.CC1.4Y = sd(CoralCover)/sqrt(n()))
# COTS.wCOTS = as.data.frame(DataHarvest.wCOTS[[1]]) %>%
#   tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
#   dplyr::group_by(PIXEL_ID, Year, Season) %>%
#   mutate(COTS = (COTS/100)*0.15) %>%
#   dplyr::summarise(Avg.COTS4Y = mean(COTS),
#             Serr.COTS4Y = sd(COTS)/sqrt(n()))
CC.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[2]]) %>%
tidyr::gather(key = "Simulation", value = "CoralCover", 4:103) %>%
group_by(PIXEL_ID, Year, Season) %>%
summarise(Avg.CC1.5Y = mean(CoralCover),
Serr.CC1.5Y = sd(CoralCover)/sqrt(n()))
COTS.wCOTS5Y = as.data.frame(DataHarvest.wCOTS5YearCrash[[1]]) %>%
tidyr::gather(key = "Simulation", value = "COTS", 4:103) %>%
dplyr::group_by(PIXEL_ID, Year, Season) %>%
mutate(COTS = (COTS/100)*0.15) %>%
dplyr::summarise(Avg.COTS5Y = mean(COTS),
Serr.COTS5Y = sd(COTS)/sqrt(n()))
ForDashboard = bind_cols(CC.NoCOTS, CC.wCOTS[,4:5], COTS.wCOTS[,4:5],
CC.wCOTS5Y[,4:5], COTS.wCOTS5Y[,4:5],
CC.wCOTS6Y[,4:5], COTS.wCOTS6Y[,4:5],
CC.wCOTS94[,4:5], COTS.wCOTS94[,4:5])
ForDashboard = dplyr::left_join(ForDashboard, data.grid[,1:7], by="PIXEL_ID") %>% dplyr::select(1,22:27,2:21)
setwd(RESULTS_DIRECTORY)
write.csv(ForDashboard, "ResultsDashboard/Dashboard_Sum.csv", row.names = F)
