FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
length(resCC.reef[,,1])
length(resCC.reef[,,2])
15802*44
### Compute HC stats at reef, cluster and bioregion levels in each year {
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
resCC.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
### Compute HC stats at reef, cluster and bioregion levels in each year {
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
### Compute HC stats for each grid cell and reef/cluster/bioregion and in each year (e.g. median, quartiles, 95% CI) and store them each in a matrix
resCC.mn <- apply(res.cc, c(1,2), mean, na.rm=T)
head(res.cc)
# Summarise Results Array
res.cc = round(res.cc, 2)
res.cots = round(res.cots, 2)
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCC.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
# res.bioregion <- array(0, dim=c(length(unique(data.grid$BIOREGION)), nyears, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
### Compute HC stats for each grid cell and reef/cluster/bioregion and in each year
# (e.g. median, quartiles, 95% CI) and store them each in a matrix
resCC.mn <- apply(res.cc, c(1,2), mean, na.rm=T)
resCC.med <- apply(res.cc, c(1,2), median, na.rm=T)
resCC.min <- apply(res.cc, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.max <- apply(res.cc, c(1,2), quantile, probs=0.95, na.rm=T)
resCC.25 <- apply(res.cc, c(1,2), quantile, probs=0.25, na.rm=T)
resCC.75 <- apply(res.cc, c(1,2), quantile, probs=0.75, na.rm=T)
resCC.reef.med <- apply(resCC.reef, c(1,2), median, na.rm=T)
resCC.reef.min <- apply(resCC.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.reef.max <- apply(resCC.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCC.reef.25 <- apply(resCC.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCC.reef.75 <- apply(resCC.reef, c(1,2), quantile, probs=0.75, na.rm=T)
resCOTS.reef.med <- apply(resCOTS.reef, c(1,2), median, na.rm=T)
resCOTS.reef.min <- apply(resCOTS.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCOTS.reef.max <- apply(resCOTS.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCOTS.reef.25 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCOTS.reef.75 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.75, na.rm=T)
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCC.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
# res.bioregion <- array(0, dim=c(length(unique(data.grid$BIOREGION)), nyears, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
resCC.reef.med <- apply(resCC.reef, c(1,2), median, na.rm=T)
resCC.reef.min <- apply(resCC.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.reef.max <- apply(resCC.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCC.reef.25 <- apply(resCC.reef, c(1,2), quantile, probs=0.25, na.rm=T)
head(resCC.reef)
head(resCC.reef.med)
head(resCC.reef.max)
array(1:12,dims = c(3,2,2),dimnames = c("reef", "year", "sim"))
array(1:12,dim = c(3,2,2),dimnames = c("reef", "year", "sim"))
array(1:12,dim = c(3,2,2),dimnames = list("reef", "year", "sim"))
dim(res.reef)
array(1:12,dim = c(3,2,2),dimnames = list("reef", "year", "sim")
array(1:12,dim = c(3,2,2),dimnames = list(c("reef", "year", "sim"))
)
test = array(1:12,dim = c(3,2,2))
test
apply(test, c(1,2), median, na.rm=T)
apply(test, c(1,2), max, na.rm=T)
apply(test, c(1,2), mean, na.rm=T)
resCC.reef.med <- apply(resCC.reef, c(1,2), median, na.rm=T)
nsimul = 10
### Compute HC stats at reef, cluster and bioregion levels in each year {
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCC.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
resCC.reef.med <- apply(resCC.reef, c(1,2), median, na.rm=T)
resCC.reef.min <- apply(resCC.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.reef.min <- apply(resCC.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.reef.max <- apply(resCC.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCC.reef.25 <- apply(resCC.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCC.reef.75 <- apply(resCC.reef, c(1,2), quantile, probs=0.75, na.rm=T)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:7]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTS.Q50=NA, COTS.Q05=NA, COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
# Compute mean disturbance impact across simulations
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
head(unique(data.grid[4:7]))
# resCC.cluster.max <- apply(resCC.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCC.cluster.25 <- apply(resCC.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCC.cluster.75 <- apply(resCC.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
#
# resCOTS.cluster.med <- apply(resCOTS.cluster, c(1,2), median, na.rm=T)
# resCOTS.cluster.mn <- apply(resCOTS.cluster, c(1,2), mean, na.rm=T)
# resCOTS.cluster.min <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.05, na.rm=T)
# resCOTS.cluster.max <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCOTS.cluster.25 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCOTS.cluster.75 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
nReefs(unique(data.grid$REEF_ID))
# resCC.cluster.max <- apply(resCC.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCC.cluster.25 <- apply(resCC.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCC.cluster.75 <- apply(resCC.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
#
# resCOTS.cluster.med <- apply(resCOTS.cluster, c(1,2), median, na.rm=T)
# resCOTS.cluster.mn <- apply(resCOTS.cluster, c(1,2), mean, na.rm=T)
# resCOTS.cluster.min <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.05, na.rm=T)
# resCOTS.cluster.max <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCOTS.cluster.25 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCOTS.cluster.75 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
nReefs = length(unique(data.grid$REEF_ID))
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:7]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs), Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=NA, COTS.Q05=NA, COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
NYEARS*NSEASONS
Years
Years = 1996:2017
NYEARS = length(Years)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:7]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs), Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=NA, COTS.Q05=NA, COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
NYEARS*NSEASONS
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:7]), rep, times=NYEARS*NSEASONS))
Year=rep(Years,each=2*nReefs)
length(unique(data.grid[1:7]))
length(unique(data.grid[4:7]))
length(unique(data.grid[4:7])[1])
length(unique(data.grid[4:7]))
unique(data.grid[4:7])
test = unique(data.grid[4:7])
duplicated(test)
sum(duplicated(test))
sum(duplicated(test$REEF_NAME))
which(duplicated(test$REEF_NAME)))
which(duplicated(test$REEF_NAME))
View(test)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs), Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=NA, COTS.Q05=NA, COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=resCOTS.reef.med, COTS.Q05=NA, COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=as.vector(resCOTS.reef.med), COTS.Q05=NA,
COTS.Q95=NA, COTS.Q25=NA, COTS.Q75=NA,
CC.Q50=NA, CC.Q05=NA, CC.Q95=NA, CC.Q25=NA, CC.Q75=NA)
View(ResultsDash)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=as.vector(resCOTS.reef.med),
COTS.Q05=as.vector(resCOTS.reef.min),
COTS.Q95=as.vector(resCOTS.reef.max),
COTS.Q25=as.vector(resCOTS.reef.25),
COTS.Q75=as.vector(resCOTS.reef.75),
CC.Q50=as.vector(resCC.reef.med),
CC.Q05=as.vector(resCC.reef.min),
CC.Q95=as.vector(resCC.reef.max),
CC.Q25=as.vector(resCC.reef.25),
CC.Q75=as.vector(resCC.reef.75))
View(ResultsDash)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.Q50=(as.vector(resCOTS.reef.med)/100)*15,
COTS.Q05=(as.vector(resCOTS.reef.min)/100)*15,
COTS.Q95=(as.vector(resCOTS.reef.max)/100)*15,
COTS.Q25=(as.vector(resCOTS.reef.25)/100)*15,
COTS.Q75=(as.vector(resCOTS.reef.75)/100)*15,
CC.Q50=as.vector(resCC.reef.med),
CC.Q05=as.vector(resCC.reef.min),
CC.Q95=as.vector(resCC.reef.max),
CC.Q25=as.vector(resCC.reef.25),
CC.Q75=as.vector(resCC.reef.75))
View(ResultsDash)
resCOTS.reef.mn <- apply(resCOTS.reef, c(1,2), mean, na.rm=T)
# resCC.gbr.max <- colMeans(resCC.max, na.rm=T)
# resCC.gbr.25 <- colMeans(resCC.25, na.rm=T)
# resCC.gbr.75 <- colMeans(resCC.75, na.rm=T)
#
# resCOTS.gbr.mn <- colMeans(resCOTS.mn, na.rm=T)
# resCOTS.gbr.med <- colMeans(resCOTS.med, na.rm=T)
# resCOTS.gbr.min <- colMeans(resCOTS.min, na.rm=T)
# resCOTS.gbr.max <- colMeans(resCOTS.max, na.rm=T)
# resCOTS.gbr.25 <- colMeans(resCOTS.25, na.rm=T)
# resCOTS.gbr.75 <- colMeans(resCOTS.75, na.rm=T)
resCC.reef.mn <- apply(resCC.reef, c(1,2), mean, na.rm=T)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.mn=(as.vector(resCOTS.reef.mn)/100)*15,
COTS.Q50=(as.vector(resCOTS.reef.med)/100)*15,
COTS.Q05=(as.vector(resCOTS.reef.min)/100)*15,
COTS.Q95=(as.vector(resCOTS.reef.max)/100)*15,
COTS.Q25=(as.vector(resCOTS.reef.25)/100)*15,
COTS.Q75=(as.vector(resCOTS.reef.75)/100)*15,
CC.mn=as.vector(resCC.reef.mn),
CC.Q50=as.vector(resCC.reef.med),
CC.Q05=as.vector(resCC.reef.min),
CC.Q95=as.vector(resCC.reef.max),
CC.Q25=as.vector(resCC.reef.25),
CC.Q75=as.vector(resCC.reef.75))
View(ResultsDash)
resCOTS.reef.med <- apply(resCOTS.reef, c(1,2), median, na.rm=T)
resCOTS.reef.min <- apply(resCOTS.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCOTS.reef.max <- apply(resCOTS.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCOTS.reef.25 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCOTS.reef.75 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.75, na.rm=T)
resCOTS.reef.min <- apply(resCOTS.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCOTS.reef.max <- apply(resCOTS.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCOTS.reef.25 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCOTS.reef.75 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.75, na.rm=T)
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.mn=(as.vector(resCOTS.reef.mn)/100)*15,
COTS.Q50=(as.vector(resCOTS.reef.med)/100)*15,
COTS.Q05=(as.vector(resCOTS.reef.min)/100)*15,
COTS.Q95=(as.vector(resCOTS.reef.max)/100)*15,
COTS.Q25=(as.vector(resCOTS.reef.25)/100)*15,
COTS.Q75=(as.vector(resCOTS.reef.75)/100)*15,
CC.mn=as.vector(resCC.reef.mn),
CC.Q50=as.vector(resCC.reef.med),
CC.Q05=as.vector(resCC.reef.min),
CC.Q95=as.vector(resCC.reef.max),
CC.Q25=as.vector(resCC.reef.25),
CC.Q75=as.vector(resCC.reef.75))
View(ResultsDash)
runModel = function(masterDF, PopData, data.COTS, Years = Years, data.grid, rep, Pred, p, Crash, nsimul,
COTSfromCoralModel=FALSE, COTSfromSimul=TRUE, browse = FALSE, inityear = 1995, OutbreakCrash = 4) {
NYEARS = length(Years)
# browser()
## MAKE THESE FIXED FOR NOW
SexRatio = masterDF[rep, "SexRatio"]
ConsRate = as.vector(masterDF[rep, 2:3])
PCFParams = c(masterDF[rep, "avgPCF"], masterDF[rep,"sdPCF"])
# avgPCF = masterDF[1, "avgPCF"]
# sdPCF = masterDF[1, "sdPCF"]
COTSmort = as.numeric(masterDF[rep, c("mortJ1", "mortJ2", "mortA")])
COTSremain = as.numeric(masterDF[rep, c("remJ1", "remJ2", "remA")])
COTS_StableStage = as.numeric(masterDF[rep, c("cssJ1", "cssJ2", "cssA")])
Pred = masterDF[,"Pred"]
p = masterDF[,"p"]
Crash = masterDF[,"Crash"]
# Initialize
npops=npops
seasons=seasons
PopData = PopData[1:npops, ]
data.COTS = data.COTS[1:npops, ]
data.grid = data.grid[1:npops, ]
# Work out which reefs from our connectivity matrix are to be included
# which reefs from npops are being used in the analysis
whichreefs = unique(data.grid$REEF_NAME[1:npops])
ConnMat = COTS.ConnMat[1:length(whichreefs), 1:length(whichreefs)]
Pixels = Pixels[1:length(colnames(ConnMat)),]
FvDParams=FvDParams
# CoralCover=data.grid$pred.HCini.mean[1:npops]
# # B0=data.grid$pred.b0.mean[1:npops]
# # HC.asym=data.grid$pred.HCmax.mean[1:npops]
# # WQ <- data.grid$Primary + data.grid$Secondary + data.grid$Tertiary
if(COTSfromSimul==F){
COTSabund <- matrix(0,nrow=npops, ncol=3)
}
COTSabund = initializeCOTSabund(data.grid, data.COTS, inityear, stagenames, COTS_StableStage)  # initialize the COTS abundance object (for year 0)
print(length(COTSabund[,3]))
Results = data.frame(sapply(PopData[1:4], rep, times=NYEARS*NSEASONS),
sapply(PopData[5:7], rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*npops), Season=rep(c("summer", "winter"),each=npops),
COTSJ1=NA, COTSJ2=NA, COTSA=NA, CoralCover=NA, CoralCover.DistLoss=NA)
Results$CoralCover.Consum = NA
Results$CoralCover.Growth = NA
######
res.cc = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
res.cots = array(NA, dim=c(dim(data.grid)[1], nyears*2, nsimul))
##### TURN OFF COTS FUNCTIONS TO RUN CORAL GROWTH AND DISTURBANCE
# Simulation loop
for (j in 1:nsimul) {
# year Loop
for(i in 1:length(Years)){
print(i + 1995)# loop through years
for(season in seasons){
if(browse == TRUE) {
browser()
}
COTSabund = doPredPreyDynamics(COTSabund, CoralCover, p, Crash)
COTSabund = doCOTSDispersal(season,COTSabund,SexRatio,ConnMat, PCFParams, Pred, FvDParams) #Pruducing NAS
COTSabund = doCOTSDemography(season, COTSabund, COTSmort, COTSremain)
Consumption = doCoralConsumption(season, COTSabund, CoralCover, ConsRate)
CoralCover = Consumption[,'CRemaining']
CoralConsum = round(Consumption[,'CChange'],4)
CoralCover.Dist = doCoralDisturbance(i, j, season, CoralCover,
COTSfromCoralModel = COTSfromCoralModel)
Disturbance = CoralCover.Dist - CoralCover
CoralCover = CoralCover.Dist
Growth = doCoralGrowth(season, CoralCover)
CoralCover = Growth[,'CoralCover']
CoralGrowth = round(Growth[,'CoralGrowth'],4)
# Calculate COTS/Manta at Reef Level for 4 years, if its >1 for 4 consecutive years then crash pop
# browser()
# Results[(Results$Year==i+1995) & (Results$Season==season),
#         c("COTSJ1", "COTSJ2", "COTSA", "CoralCover", "CoralCover.DistLoss", "CoralCover.Consum", 'CoralCover.Growth')] =
#   cbind(COTSabund, CoralCover, Disturbance, CoralConsum, CoralGrowth)
if(i>3 & season =="winter") {
OutbreakCrasher = Results %>%
dplyr::filter(Year > (i+1995-OutbreakCrash) & Year <= i+1995) %>%
group_by(REEF_NAME, Year) %>%
summarise(Mean.COTS = mean(COTSA)) %>%
mutate(is.outbreak = ifelse(Mean.COTS > 1, 1,0)) %>%
group_by(REEF_NAME) %>%
summarise(Crash = ifelse(sum(is.outbreak)==6,1,0)) %>%
filter(Crash==1)
matchit = match(data.grid$REEF_NAME,OutbreakCrasher$REEF_NAME)
COTSabund[which(!is.na(matchit)),] = c(0,0,0)
} # Close outbreak crasher
# Store in array
if (season=="summer") {
res.cc[,i,j] = CoralCover
res.cots[,i,j] = COTSabund[,3]
}
res.cc[,i+1,j] = CoralCover
res.cots[,i+1,j] = COTSabund[,3]
} # close season loop
} # close Year loop
# setwd(RESULTS_DIRECTORY)
# name <- sprintf("Sample_%s.Rdata",j)
# save(Results, file=name)
# print(j)
}
# Summarise Results Array
### Compute HC stats at reef, cluster and bioregion levels in each year {
resCC.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCC.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
resCOTS.reef <- array(0, dim=c(length(unique(data.grid$REEF_ID)), nyears*2, nsimul))
resCOTS.cluster <- array(0, dim=c(length(unique(data.grid$bent.clust)), nyears*2, nsimul))
# res.bioregion <- array(0, dim=c(length(unique(data.grid$BIOREGION)), nyears, nsimul))
for (i in 1:dim(res.cc)[3]) {
resCC.reef[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCC.cluster[,,i] <- as.matrix(aggregate(res.cc[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
resCOTS.reef[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$REEF_ID),
FUN=mean, na.rm=T)[-1])
resCOTS.cluster[,,i] <- as.matrix(aggregate(res.cots[,,i], by=list(data.grid$bent.clust),
FUN=mean, na.rm=T)[-1])
#   res.bioregion[,,i] <- as.matrix(aggregate(res[,,i], by=list(data.grid$BIOREGION), FUN=mean, na.rm=T)[-1])
}
### Compute HC stats for each grid cell and reef/cluster/bioregion and in each year
# (e.g. median, quartiles, 95% CI) and store them each in a matrix
# resCC.mn <- apply(res.cc, c(1,2), mean, na.rm=T)
# resCC.med <- apply(res.cc, c(1,2), median, na.rm=T)
# resCC.min <- apply(res.cc, c(1,2), quantile, probs=0.05, na.rm=T)
# resCC.max <- apply(res.cc, c(1,2), quantile, probs=0.95, na.rm=T)
# resCC.25 <- apply(res.cc, c(1,2), quantile, probs=0.25, na.rm=T)
# resCC.75 <- apply(res.cc, c(1,2), quantile, probs=0.75, na.rm=T)
#
# resCOTS.mn <- apply(res.cots, c(1,2), mean, na.rm=T)
# resCOTS.med <- apply(res.cots, c(1,2), median, na.rm=T)
# resCOTS.min <- apply(res.cots, c(1,2), quantile, probs=0.05, na.rm=T)
# resCOTS.max <- apply(res.cots, c(1,2), quantile, probs=0.95, na.rm=T)
# resCOTS.25 <- apply(res.cots, c(1,2), quantile, probs=0.25, na.rm=T)
# resCOTS.75 <- apply(res.cots, c(1,2), quantile, probs=0.75, na.rm=T)
#
# resCC.gbr.mn <- colMeans(resCC.mn, na.rm=T)
# resCC.gbr.med <- colMeans(resCC.med, na.rm=T)
# resCC.gbr.min <- colMeans(resCC.min, na.rm=T)
# resCC.gbr.max <- colMeans(resCC.max, na.rm=T)
# resCC.gbr.25 <- colMeans(resCC.25, na.rm=T)
# resCC.gbr.75 <- colMeans(resCC.75, na.rm=T)
#
# resCOTS.gbr.mn <- colMeans(resCOTS.mn, na.rm=T)
# resCOTS.gbr.med <- colMeans(resCOTS.med, na.rm=T)
# resCOTS.gbr.min <- colMeans(resCOTS.min, na.rm=T)
# resCOTS.gbr.max <- colMeans(resCOTS.max, na.rm=T)
# resCOTS.gbr.25 <- colMeans(resCOTS.25, na.rm=T)
# resCOTS.gbr.75 <- colMeans(resCOTS.75, na.rm=T)
resCC.reef.mn <- apply(resCC.reef, c(1,2), mean, na.rm=T)
resCC.reef.med <- apply(resCC.reef, c(1,2), median, na.rm=T)
resCC.reef.min <- apply(resCC.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCC.reef.max <- apply(resCC.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCC.reef.25 <- apply(resCC.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCC.reef.75 <- apply(resCC.reef, c(1,2), quantile, probs=0.75, na.rm=T)
resCOTS.reef.mn <- apply(resCOTS.reef, c(1,2), mean, na.rm=T)
resCOTS.reef.med <- apply(resCOTS.reef, c(1,2), median, na.rm=T)
resCOTS.reef.min <- apply(resCOTS.reef, c(1,2), quantile, probs=0.05, na.rm=T)
resCOTS.reef.max <- apply(resCOTS.reef, c(1,2), quantile, probs=0.95, na.rm=T)
resCOTS.reef.25 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.25, na.rm=T)
resCOTS.reef.75 <- apply(resCOTS.reef, c(1,2), quantile, probs=0.75, na.rm=T)
# resCC.cluster.med <- apply(resCC.cluster, c(1,2), median, na.rm=T)
# resCC.cluster.mn <- apply(resCC.cluster, c(1,2), mean, na.rm=T)
# resCC.cluster.min <- apply(resCC.cluster, c(1,2), quantile, probs=0.05, na.rm=T)
# resCC.cluster.max <- apply(resCC.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCC.cluster.25 <- apply(resCC.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCC.cluster.75 <- apply(resCC.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
#
# resCOTS.cluster.med <- apply(resCOTS.cluster, c(1,2), median, na.rm=T)
# resCOTS.cluster.mn <- apply(resCOTS.cluster, c(1,2), mean, na.rm=T)
# resCOTS.cluster.min <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.05, na.rm=T)
# resCOTS.cluster.max <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.95, na.rm=T)
# resCOTS.cluster.25 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.25, na.rm=T)
# resCOTS.cluster.75 <- apply(resCOTS.cluster, c(1,2), quantile, probs=0.75, na.rm=T)
nReefs = length(unique(data.grid$REEF_ID))
# Results df for Dashboard -- Reef Level
ResultsDash = data.frame(sapply(unique(data.grid[4:5]), rep, times=NYEARS*NSEASONS),
Year=rep(Years,each=2*nReefs),
Season=rep(c("summer", "winter"),each=nReefs),
COTS.mn=(as.vector(resCOTS.reef.mn)/100)*15,
COTS.Q50=(as.vector(resCOTS.reef.med)/100)*15,
COTS.Q05=(as.vector(resCOTS.reef.min)/100)*15,
COTS.Q95=(as.vector(resCOTS.reef.max)/100)*15,
COTS.Q25=(as.vector(resCOTS.reef.25)/100)*15,
COTS.Q75=(as.vector(resCOTS.reef.75)/100)*15,
CC.mn=as.vector(resCC.reef.mn),
CC.Q50=as.vector(resCC.reef.med),
CC.Q05=as.vector(resCC.reef.min),
CC.Q95=as.vector(resCC.reef.max),
CC.Q25=as.vector(resCC.reef.25),
CC.Q75=as.vector(resCC.reef.75))
# Compute mean disturbance impact across simulations
for (i in 1:nsimul) bleaching.rsmpl[,,i][is.na(bleaching.rsmpl[,,i])] <- 0
bleaching.mn <- apply(bleaching.rsmpl, c(1,2), mean, na.rm=T)
COTS.mn <- apply(COTS.rsmpl, c(1,2), mean, na.rm=T)
disease.mn <- apply(disease.rsmpl, c(1,2), mean, na.rm=T)
storms.mn <- apply(storms.rsmpl, c(1,2), mean, na.rm=T)
unknown.mn <- apply(unknown.rsmpl, c(1,2), mean, na.rm=T)
# Make list of objects to save --> all results and disturbances
setwd(RESULTS_DIRECTORY)
name <- sprintf("Results_%s.Rdata",j)
save(res.cc, res.cots, ResultsDash, file=name)
}
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
npops=15802
runModel(masterDF=masterDF, Years = 1996:2017, PopData=PopData[1:npops,],data.COTS = data.COTS[1:npops,],
data.grid = data.grid[1:npops,], rep=1, Pred=0.98, p=0.25, Crash = 3,
nsimul = 10, COTSfromCoralModel = TRUE, COTSfromSimul = FALSE, browse = F, inityear = 1996,)
