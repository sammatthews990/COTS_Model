fs=1; fmax=3; F0=0.1 #rate of food supply; max rate; initial food density
m=1 #number of mass units a larva must increase to become an adult
epsilon=1#const of proportionality between development and food consumption
K=1 #half sat constant for food consumption
q=5; dA=2 #reproduction rate; adult death rate
dL=log(q/dA) #larval death rate
solver.options=list(DDEsolver='deSolve',atol=1e-9,rtol=1e-9,method='lsoda',hbsize=1e4)
#solver.options=list(DDEsolver='PBS',tol=1e-9,hbsize=1e4,dt=0.01)
varDurFoodFunctions <- list(
  reproFunc=function(x,time,species,strain){
    if(species==1){reprod=fs}
    if(species==2){reprod=q*x$Damselfly['adults',1]}
    return(max(0,reprod))
  },
  deathFunc=function(stage,x,time,species,strain){
    if(species==1){v=fmax*x$Damselfly['larvae',1]/(K+x$Food[1,1])}
    if(species==2){a=c(dL,dA);v=a[stage]}
    return(max(0,v))
  },
  durationFunc=function(stage,x,time,species,strain){
    if(time==0 & species==2 & stage==1){
      v=m/(epsilon*fmax*F0/(K+F0))}
    return(v)
  },
  develFunc=function(stage,x,time,species,strain){
    if (species==2 & stage==1){
      v=epsilon*fmax*x$Food[1,1]/(K+x$Food[1,1])}
    return(v)
  },
  immigrationFunc=function(stage,x,time,species,strain){
    v=0
    if (species==2 & stage==1){
      if (time>=0 & time<=0.1){v=1}}
    return(v)
  },
  emigrationFunc=function(stage,x,time,species,strain){return(0)}
)
modelOutput=popModel(
  numSpecies=2,speciesNames=c('Food','Damselfly'),
  numStages=c(1,2),stageNames=list('one',c('larvae','adults')),
  numStrains=c(1,1),
  timeDependLoss=c(TRUE,FALSE),timeDependDuration=c(FALSE,TRUE),
  ICs=list(matrix(F0,1,1),matrix(0,nrow=2,ncol=1)),
  timeVec=seq(0,30,0.1),
  solverOptions=solver.options, rateFunctions=varDurFoodFunctions
)
modelOuput
